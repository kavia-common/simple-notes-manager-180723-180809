{"is_source_file": true, "format": "TypeScript", "description": "This file defines a NotesService interface with two implementation strategies: LocalStorageStrategy and a placeholder for RestApiStrategy, managing note persistence via local storage and a planned backend API. It provides a pluggable architecture for handling notes data within a front-end application.", "external_files": ["@/stores/notesStore"], "external_methods": [], "published": ["notesService"], "classes": [{"name": "LocalStorageStrategy", "description": "Implements persistent storage of notes in the browser's localStorage."}, {"name": "RestApiStrategy", "description": "Placeholder class for future backend API integration."}], "methods": [{"name": "async list(): Promise<Note[]> { list", "description": "Retrieves notes, either from localStorage or via API (not yet implemented).", "scope": "RestApiStrategy", "scopeKind": "class"}, {"name": "async save(): Promise<void> { save", "description": "Saves notes to localStorage or API (API method not yet implemented).", "scope": "RestApiStrategy", "scopeKind": "class"}, {"name": "list(): Promise<Note[]> list", "scope": "NotesStrategy", "scopeKind": "interface", "description": "unavailable"}, {"name": "async save(notes: Note[]): Promise<void> { save", "scope": "LocalStorageStrategy", "scopeKind": "class", "description": "unavailable"}, {"name": "save(notes: Note[]): Promise<void> save", "scope": "NotesStrategy", "scopeKind": "interface", "description": "unavailable"}], "calls": ["localStorage.getItem", "localStorage.setItem", "JSON.parse", "JSON.stringify"], "search-terms": ["notesService", "NotesStrategy", "LocalStorageStrategy", "RestApiStrategy", "localStorage", "notes"], "state": 2, "file_id": 21, "knowledge_revision": 49, "git_revision": "", "revision_history": [{"45": ""}, {"48": ""}, {"49": ""}], "ctags": [{"_type": "tag", "name": "LocalStorageStrategy", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^class LocalStorageStrategy implements NotesStrategy {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "NotesStrategy", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^interface NotesStrategy {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "RestApiStrategy", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^class RestApiStrategy implements NotesStrategy {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^const STORAGE_KEY = 'ocean-notes-v1'$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^  async list(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "method", "scope": "LocalStorageStrategy", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^  async list(): Promise<Note[]> {$/", "language": "TypeScript", "kind": "method", "scope": "RestApiStrategy", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^  list(): Promise<Note[]>$/", "language": "TypeScript", "kind": "method", "scope": "NotesStrategy", "scopeKind": "interface"}, {"_type": "tag", "name": "notesService", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^export const notesService: NotesStrategy = new LocalStorageStrategy()$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^      const parsed: Note[] = JSON.parse(raw)$/", "language": "TypeScript", "kind": "constant", "scope": "LocalStorageStrategy.list", "scopeKind": "method"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^      const raw = localStorage.getItem(STORAGE_KEY)$/", "language": "TypeScript", "kind": "constant", "scope": "LocalStorageStrategy.list", "scopeKind": "method"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^  async save(): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "RestApiStrategy", "scopeKind": "class"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^  async save(notes: Note[]): Promise<void> {$/", "language": "TypeScript", "kind": "method", "scope": "LocalStorageStrategy", "scopeKind": "class"}, {"_type": "tag", "name": "save", "path": "/home/kavia/workspace/code-generation/simple-notes-manager-180723-180809/notes_frontend/src/services/notesService.ts", "pattern": "/^  save(notes: Note[]): Promise<void>$/", "language": "TypeScript", "kind": "method", "scope": "NotesStrategy", "scopeKind": "interface"}], "hash": "8a2105e34ea09ab935b0afefe5df42b8", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/services/notesService.ts", "fields": [{"name": "interface NotesStrategy {", "scope": "", "scopeKind": "", "description": "unavailable"}]}